#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main()
{
   int k, l, m, n, d;
    int cont = 0;
    
    cin >> k >> l >> m >> n >> d;
    cont = d;
    
    if(k == 1 || l == 1 || m == 1 || n == 1)
    {
        cout << d << endl;
    }
    else
    {
        for(int i = 1; i <= d; i++)
        {
            if((i%k != 0) && (i%l != 0) && (i%m != 0) && (i%n != 0))
                cont--;
        }
        cout << cont << endl;
    }
   return 0;
}
PROCESS:
In simpler words you will be given k, l, m, n and d as inputs. now you need to count the numbers starting from 1 and ending at d, which are divisible by atleast one of k,l,m,n;
Explanation of sample input 1 :
here d=12, so you need to count numbers from 1,2,3,.....,12 which are divisible by atleast one of (1,2,3,4). You can observe that count = 12.

EXPLANATION:
Every k-th dragon got punched in the face with a frying pan..it means from 1-d if a number is divisible by k then it suffered moral or physical damage.....
same thing in l , m , n th....if a number from 1-d is divisible by any of 4 number then that dragon will suffer moral or physical damage.
so just you have to find the count how many number are divisible by k/l/m/n from 1 to d...and that's the answer

#include <iostream>
#include <vector>
using namespace std;
 
bool func(vector<int>& v,int k){
    for(int i=0;i<v.size();i++){
        if(v[i]%k!=0){
            return false;
        }
    }
    return true;
}
int main()
{
   int t;
   cin>>t;
   while(t--){
      int n,k;
      cin>>n>>k;
      vector<int> v(n);
      for(int i=0;i<n;i++){
          cin>>v[i];
      }
      vector<int> addons(n);
      for(int i=0;i<n;i++){
          addons[i]= k-(v[i]%k);
      }
      int x=0;
      int count=0;
      if(func(v,k)){
          cout<<"0"<<endl;
      }
      else{
      while(!func(v,k)){
          x++;
          count++;
          for(int i=0;i<v.size();i++){
              if(v[i]%k!=0 && (v[i]+x)%k==0){
                  v[i]+=x;
                  break;
              }
          }
      }
      cout<<count+1<<endl;
      }
      
   }
   return 0;
}

The above solution gives you a TLE Error.So


#include <iostream>
#include <vector>
#include <map>
#include <algorithm>
#include <cmath>
using namespace std;
 long long int max(long long int a,long long int b){
     if(a>b) return a;
     else return b;
 }
int main()
{
   int t;
   cin>>t;
   while(t--){
      long long int n,k;
      cin>>n>>k;
      vector<long long int> v(n);
      map<long long int,long long int> mp;
      for(int i=0;i<n;i++){
          cin>>v[i];
      }
      long long int zero=0;
      for(int i=0;i<n;i++){
          long long int rem= v[i]%k;
          if(rem==0){
              zero++;
          }
          else{
              rem= k- rem;
              mp[rem]++;
          }
      }
      long long int ans=0;
      if(zero==n){
          cout<<"0"<<endl;
      }
      else{
          for(auto x:mp){
              if(x.first==0){
                  
              }
              else{
                  long long int z=x.first;
                  if(x.second-1>=1){
                      z+= (x.second-1)*k;
                  }
                  ans=max(ans,z);
              }
          }
          
          cout<<ans+1<<endl;
      }
   }
   return 0;
}

// https://www.youtube.com/watch?v=Q6q0kaRaHBs&ab_channel=codeExplainer


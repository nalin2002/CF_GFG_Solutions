// O(n2*K) solution
class Solution{
public:
    int maxProfit(int K, int N, int A[])
    {
        if(N==1){
            return 0;
        }
        vector<vector<int>> dp(N+1,vector<int>(K+1,0));
        for(int i=1;i<=N;i++){
         for(int j=1;j<=K;j++){
             int max_so_far=INT_MIN;
             max_so_far=max(max_so_far,dp[i-1][j]);
             for(int m=0;m<i-1;m++){
                 max_so_far=max(max_so_far,A[i-1]-A[m]+dp[m+1][j-1]);
             }
             dp[i][j]=max_so_far;
         }
        }
        return dp[N][K];
    }
};

// O(n*k) solution



class Solution{
public:
    int maximumPath(int N, vector<vector<int>> Matrix)
    {
        if(N==1) return Matrix[0][0];
        vector<vector<int>> dp(N,vector<int>(N,0));
        for(int i=0;i<N;i++){
            dp[0][i]=Matrix[0][i];
        }
        for(int i=1;i<N;i++){
            for(int j=0;j<N;j++){
                
                if(j==0){
                dp[i][j]=max(dp[i-1][j],dp[i-1][j+1])+Matrix[i][j];
                }
                else if(j==N-1){
                dp[i][j]=max(dp[i-1][j],dp[i-1][j-1])+Matrix[i][j];
                }
                else{
                dp[i][j]= max(dp[i-1][j],max(dp[i-1][j-1],dp[i-1][j+1]))+Matrix[i][j];
                }
            }
        }
        return *max_element(dp[N-1].begin(),dp[N-1].end());
    }
};
